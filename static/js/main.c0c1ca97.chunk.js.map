{"version":3,"sources":["images/ru_white_1.jpg","images/ru_white_2.jpg","images/ru_white_3.jpg","images/ru_white_4.jpg","images/ru_white_5.jpg","images/ru_white_6.jpg","images/ru_white_7.jpg","images/ru_white_8.jpg","images/ru_white_9.jpg","fonts/Grinched2.0.ttf","images/vitamins.jpg","sw.js","components/header/help.js","components/header/about.js","components/header/login.js","components/header/header.js","components/body/info.js","components/halpers/functions.js","components/keyboard/keyboard.js","components/games/circles.js","components/games/simplegame.js","components/body/body.js","components/footer/footer.js","supermathpage.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","SMHelp","props","autoplay","open","onClose","onClick","onStart","style","position","media","src","alt","mediaBackgroundStyle","backgroundColor","red","title","subtitle","blue","green","SMAbout","Dialog","aria-labelledby","transitionDuration","DialogTitle","DialogContent","dividers","Typography","gutterBottom","Card","display","flexDirection","CardMedia","component","height","require","DialogActions","Button","color","SMLogin","fullWidth","alignItems","Avatar","margin","width","variant","noValidate","TextField","required","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Grid","container","item","xs","Link","href","SMHeader","state","aboutOpen","helpOpen","loginOpen","AppBar","Toolbar","startIcon","marginLeft","setState","flexGrow","popupId","popupState","Fragment","bindTrigger","Menu","bindMenu","MenuItem","close","this","React","Component","withStyles","theme","root","padding","spacing","closeButton","right","top","palette","grey","children","classes","other","disableTypography","className","IconButton","aria-label","MuiDialogContent","MuiDialogActions","SMDialogInfo","text","image","imgUrl","OPERATION_SUM","OPERATION_SUB","OPERATION_MUL","OPERATION_DIV","OPERATION_GREATER","OPERATION_SMALLER","OPERATION_EQUALLY","get_rnd_int","int_min","int_max","Math","floor","random","generate_rnd_task","operations","range","numbers","split","length","operation","array","minum","parseInt","maxum","factor_1","factor_2","indexOf","num_1","num_2","res","alert","substr","SMKeyBoard","onDigit","onOperator","SMCircles","cx","cy","r","stroke","strokeWidth","fill","SMSimpleGame","bind","onKeyboard","task","user_enter","number_1","number_2","result","decoration","counter","passed","failed","attempt","digit","console","log","setTimeout","proceed_with_next_task","expected_result","toString","set_passed","set_failed","charAt","set_interim","current","target","innerText","check_response","operator","key","fullScreen","handleKeys","onKeyEvent","e","cards","images","logo1","logo2","logo3","logo4","logo5","logo6","logo7","logo8","logo9","titles","headers","desciptions","SMBody","infoOpen","viewDialogTitleText","viewDialogDescriptionText","viewDialogImageUrl","gameOpen","gameInfo","handleInfoOpen","handleGameOpen","card_id","infoTitle","infoText","infoIURL","align","marginTop","fontFamily","fontVariant","paragraph","Container","grid","maxWidth","map","card","sm","md","CardActionArea","CardContent","content","CardActions","size","SMFooter","Date","getFullYear","SuperMathPage","CssBaseline","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0c1ca97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ru_white_1.a9a4d2a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ru_white_2.f7dc0622.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ru_white_3.5eab4036.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ru_white_4.1935530d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ru_white_5.9b3a550e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ru_white_6.f7dc0622.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ru_white_7.f7dc0622.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ru_white_8.f7dc0622.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ru_white_9.f7dc0622.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Grinched2.0.f4968790.ttf\";","module.exports = __webpack_public_path__ + \"static/media/vitamins.79bce60d.jpg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {AutoRotatingCarousel, Slide} from 'material-auto-rotating-carousel';\r\nimport {red, blue, green} from 'material-ui/colors';\r\n\r\nexport default function SMHelp(props) {\r\n    return (\r\n        <AutoRotatingCarousel\r\n            autoplay={false}\r\n            open={props.open}\r\n            onClose={() => props.onClick()}\r\n            onStart={() => props.onClick()}\r\n            style={{position: 'absolute'}}>\r\n\r\n            <Slide\r\n                media={<img src='http://www.icons101.com/icon_png/size_256/id_79394/youtube.png' alt='youtube'/>}\r\n                mediaBackgroundStyle={{ backgroundColor: red[400] }}\r\n                style={{ backgroundColor: red[600] }}\r\n                title='Watch our SuperMath overview video on YouTube'\r\n                subtitle='SuperMath helps students transition from counting or calculating the basic math facts to recalling them. Quickly recalling math facts,\r\n                    instead of calculating them, frees up mental resources for higher-level operations. SuperMath’s timed activities encourage students to answer\r\n                    questions as quickly as possible.'/>\r\n\r\n            <Slide\r\n                media={<img src='http://www.icons101.com/icon_png/size_256/id_80975/GoogleInbox.png' alt='inbox'/>}\r\n                mediaBackgroundStyle={{ backgroundColor: blue[400] }}\r\n                style={{ backgroundColor: blue[600] }}\r\n                title='Sign-up, Sign-in and Enrollment'\r\n                subtitle='If you do not have SuperMath account, you can do it easely. Just press by current link and create it in a few seconds.'/>\r\n\r\n            <Slide\r\n                media={<img src='http://www.icons101.com/icon_png/size_256/id_76704/Google_Settings.png' alt='settings'/>}\r\n                mediaBackgroundStyle={{ backgroundColor: green[400] }}\r\n                style={{ backgroundColor: green[600] }}\r\n                title='Settgins'\r\n                subtitle='tbd...'/>\r\n\r\n        </AutoRotatingCarousel>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {DialogTitle, DialogContent, DialogActions, Typography, Dialog, Card, CardMedia, Button} from '@material-ui/core';\r\n\r\nexport default function SMAbout(props) {\r\n    return (\r\n        <Dialog onClose={() => props.onClick()} aria-labelledby=\"customized-dialog-title\" transitionDuration={500} open={props.open}>\r\n            <DialogTitle onClose={() => props.onClick()}>\r\n                about SuperMath\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <Typography gutterBottom>\r\n                    Use SuperMath as mathematical vitamins!\r\n                </Typography>\r\n\r\n                <Card style={{display: 'flex', flexDirection: 'column'}}>\r\n                    <CardMedia component=\"img\" alt=\"Vitamins!\" height=\"140\" src={require('./../../images/vitamins.jpg')} title=\"Use SuperMath as mathematical vitamins!\"/>\r\n                </Card>\r\n\r\n                <Typography gutterBottom>\r\n                    Offer the child to regularly solve the examples in SuperMath\r\n                    only once a day, for five minutes, and you will notice how much faster and more accurately he will\r\n                    operate on the numbers. The speed and accuracy of the calculations - these are the bricks that lay\r\n                    the foundation of your childs mathematical education.\r\n                </Typography>\r\n\r\n                <Typography gutterBottom>\r\n                    In one day, I just personally asked myself - How can I contribute to improve a small part of the world.\r\n                    Im father of two wonderful sons and due to a lot of work responsibility, in some days I could not get so much attantion to them, specially in Mathematics.\r\n                    We could not image our current life now without Mobile phone and Internet and we have it because of Math.\r\n                    When I developed that Math portal for kids I had vary clear goal - help kids with Math! :-)\r\n                </Typography>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                  <Button onClose={() => props.onClick()} color=\"primary\">CLOSE</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Dialog, DialogContent, Avatar, Typography, TextField, Grid, Link, Button, Checkbox, FormControlLabel} from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {red} from 'material-ui/colors';\r\n\r\nexport default function SMLogin(props) {\r\n    return (\r\n        <Dialog onClose={() => props.onClick()} fullWidth={true} open={props.open}>\r\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <Avatar style={{margin: 10, width: 60, height: 60, backgroundColor: red[500] }}><LockOutlinedIcon /></Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">Sign In</Typography>\r\n                <DialogContent dividers>\r\n                    <form noValidate>\r\n                        <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\"\r\n                                   label=\"Email Address\" name=\"email\" autoComplete=\"email\" autoFocus/>\r\n                        <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"password\"\r\n                                   label=\"Password\" name=\"password\" type=\"password\" autoComplete=\"current-password\"/>\r\n                        <FormControlLabel control={<Checkbox value=\"remember\" color=\"primary\" />} label=\"Remember me\"/>\r\n\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">Sign In</Button>\r\n                        <Grid container>\r\n                          <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">Forgot password?</Link>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\">{\"Don't have an account? Sign Up\"}</Link>\r\n                          </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </DialogContent>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {AppBar, Toolbar, Typography, Menu, Button, MenuItem} from '@material-ui/core';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\r\n\r\nimport SMHelp from \"./help\";\r\nimport SMAbout from \"./about\";\r\nimport SMLogin from \"./login\";\r\n\r\nexport default class SMHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {aboutOpen: false, helpOpen: false, loginOpen: false};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Button variant=\"contained\" color=\"primary\" startIcon={<HomeIcon />}>Home</Button>\r\n                    <Button variant=\"contained\" style={{marginLeft: '1%'}} color=\"primary\" startIcon={<InfoOutlinedIcon />} onClick={() => this.setState({aboutOpen: true})}>About</Button>\r\n                    <Button variant=\"contained\" style={{marginLeft: '1%'}} color=\"primary\" startIcon={<HelpOutlineIcon />} onClick={() => this.setState({helpOpen: true})}>Help</Button>\r\n                    <Typography variant=\"h5\" style={{flexGrow: 1}}></Typography>\r\n                    <Button variant=\"contained\" color=\"primary\" startIcon={<PersonOutlineIcon />} onClick={() => this.setState({loginOpen: true})}>Login</Button>\r\n\r\n                    <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\r\n                        {popupState => (\r\n                            <React.Fragment>\r\n                                <Button variant=\"contained\" color=\"primary\" {...bindTrigger(popupState)}>Language</Button>\r\n                                    <Menu {...bindMenu(popupState)}>\r\n                                        <MenuItem onClick={popupState.close}>English</MenuItem>\r\n                                        <MenuItem onClick={popupState.close}>Russian</MenuItem>\r\n                                        <MenuItem onClick={popupState.close}>Dutch</MenuItem>\r\n                                    </Menu>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </PopupState>\r\n                </Toolbar>\r\n\r\n                <SMHelp open={this.state.helpOpen} onClick={() => this.setState({helpOpen: false})}/>\r\n                <SMAbout open={this.state.aboutOpen} onClick={() => this.setState({aboutOpen: false})}/>\r\n                <SMLogin open={this.state.loginOpen} onClick={() => this.setState({loginOpen: false})}/>\r\n            </AppBar>\r\n    )};\r\n}\r\n","import React from 'react';\r\nimport {Typography, Dialog, Card, CardMedia, Button, IconButton} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function SMDialogInfo(props) {\r\n    return (\r\n        <Dialog onClose={() => props.onClick()} aria-labelledby=\"customized-dialog-title\" transitionDuration={500} open={props.open}>\r\n                      <DialogTitle onClose={() => props.onClick()}>{props.title}</DialogTitle>\r\n\r\n                      <DialogContent dividers>\r\n                        <Typography gutterBottom>{props.text}</Typography>\r\n\r\n                        <Card style={{display: 'flex', flexDirection: 'column'}}>\r\n                            <CardMedia component=\"img\" alt=\"Media Card task\" height=\"100%\" image={props.imgUrl}/>\r\n                        </Card>\r\n\r\n                        <Typography gutterBottom>\r\n                            SuperMath is designed to help students transition from counting or calculating to recalling the basic arithmetic facts.\r\n                            The timer allows SuperMath to distinguish a recalled answer from a counted or calculated answer.\r\n                            The default three-second mastery threshold is carefully selected to be long enough to type in a recalled answer,\r\n                            but not long enough for the student to comfortably enter a counted or calculated answer.\r\n                            Via Settings, we have added the ability to hide/pause the timer, though student answers are still evaluated.\r\n                            With less time pressure, students may not answer as quickly as they can, potentially resulting in lower scores\r\n                            or slower progress than they might otherwise achieve.\r\n                        </Typography>\r\n\r\n                      </DialogContent>\r\n                      <DialogActions>\r\n                          <Button onClick={() => props.onClick()} color=\"primary\">Play</Button>\r\n                      </DialogActions>\r\n                    </Dialog>\r\n    );\r\n}\r\n","/** @const {string} */\r\nvar OPERATION_SUM = '+';\r\n/** @const {string} */\r\nvar OPERATION_SUB = '-';\r\n/** @const {string} */\r\nvar OPERATION_MUL = '*';\r\n/** @const {string} */\r\nvar OPERATION_DIV = '/';\r\n\r\n/** @const {string} */\r\nvar OPERATION_GREATER = '>';\r\n/** @const {string} */\r\nvar OPERATION_SMALLER = '<';\r\n/** @const {string} */\r\nvar OPERATION_EQUALLY = '=';\r\n\r\n/**\r\n * Returns a random number between min (inclusive) and max (inclusive)\r\n *\r\n * [0...9], [10...99], [100...999]\r\n */\r\nfunction get_rnd_int(int_min, int_max) {\r\n    return Math.floor(Math.random() * (int_max - int_min + 1)) + int_min;\r\n}\r\n\r\n/*\r\n    usage example:\r\n        generate_rnd_task('+', '0,9')\r\n        generate_rnd_task('+-', '0,10')\r\n        generate_rnd_task('+-', '0,100')\r\n*/\r\nexport function generate_rnd_task(operations, range) {\r\n    var numbers = range.split(',');\r\n    if (numbers.length < 2) {\r\n        alert(\"RND generator error: wrong range numbers format '\" + range + \"'\");\r\n        return;\r\n    }\r\n\r\n    var operation = '';\r\n    if (operations.length === 1) {\r\n        operation = operations;\r\n    } else {\r\n        var array = operations.split('');\r\n        operation = array[get_rnd_int(0, array.length-1)];\r\n    }\r\n        \r\n    var minum = parseInt(numbers[0]);\r\n    var maxum = parseInt(numbers[1]);\r\n    var factor_1 = '1', factor_2 = '1';\r\n    if (numbers.length === 4) {\r\n        if ((numbers[2].indexOf('=') !== -1) ||\r\n            (numbers[3].indexOf('=') !== -1)) {\r\n            factor_1 = numbers[2]; factor_2 = numbers[3];\r\n        } else {\r\n            factor_1 = numbers[2];\r\n            factor_2 = numbers[3];\r\n        }\r\n    }\r\n\r\n    var num_1 = 0, num_2 = 0, res = 0;\r\n    switch (operation) {\r\n        case OPERATION_SUM:\r\n            num_1 = parseInt(get_rnd_int(minum, maxum) * factor_1);\r\n            num_2 = parseInt(get_rnd_int(minum, maxum) * factor_2);\r\n            res = num_1 + num_2;\r\n        break;\r\n\r\n        case OPERATION_SUB:\r\n            // if operation is '-' (minus), the first number should be\r\n            // >= second, i.e. result should not be negative\r\n            if (minum >= maxum) {\r\n                alert(\"RND generator error: wrong MAX and MIN ranges '\" + range + \"'\");\r\n                return;\r\n            } else {\r\n                // generate numbers first and only AFTER that * factor\r\n                num_2 = get_rnd_int(minum, maxum);\r\n                num_1 = get_rnd_int(num_2, maxum);\r\n\r\n                num_1 = parseInt(num_1 * factor_1);\r\n                num_2 = parseInt(num_2 * factor_2);\r\n\r\n                res = num_1 - num_2;\r\n            }\r\n        break;\r\n\r\n        case OPERATION_MUL:\r\n            // =10 means that num_1=10, i.e. first number should be exactly 10\r\n            if (factor_1.indexOf('=') !== -1) {\r\n              num_1 = factor_1.substr(1, factor_1.length);\r\n            } else {\r\n              num_1 = parseInt(get_rnd_int(minum, maxum) * factor_1);\r\n            }\r\n\r\n            if (factor_2.indexOf('=') !== -1) {\r\n              num_2 = factor_2.substr(1, factor_2.length);\r\n            } else {\r\n              // 'yellow_1': [TYPE_MO, '*', '0,9,1,=10', 'result', 10, 'game'],\r\n              // 'yellow_2': [TYPE_MO, '*', '0,3', 'result', 10, 'game'],\r\n              // 'yellow_3': [TYPE_MO, '*', '0,7', 'result', 10, 'game'],\r\n              // 'yellow_4': [TYPE_MO, '*', '0,10', 'result', 10, 'game'],\r\n              // 'yellow_5': [TYPE_MO, '/', '0,9,10,=10', 'result', 10, 'game'],\r\n              // 'yellow_6': [TYPE_MO, '/', '1,3', 'result', 10, 'game'],\r\n              // 'yellow_7': [TYPE_MO, '/', '1,7', 'result', 10, 'game'],\r\n              // 'yellow_8': [TYPE_MO, '/', '1,10', 'result', 10, 'game'],\r\n              // 'yellow_9': [TYPE_CO, '*/', '0,9', 'operation', 10, 'game'],\r\n              // 'yellow_10': [TYPE_MO, '*', '1,10', 'number_2', 10, 'game'],\r\n              // 'yellow_11': [TYPE_MO, '/', '1,10', 'number_2', 10, 'game'],\r\n              // 'yellow_12': [TYPE_MO, '*/', '1,10', 'result', 10, 'game'],\r\n              if (numbers.length === 2) {\r\n                if (maxum < 10) {\r\n                    maxum = 10;\r\n                }\r\n              }\r\n              num_2 = parseInt(get_rnd_int(minum, maxum) * factor_2);\r\n            }\r\n\r\n            res = num_1 * num_2;\r\n        break;\r\n\r\n        case OPERATION_DIV: // /\r\n            // =10 means that num_1=10, i.e. first number should be exactly 10\r\n            if (factor_2.indexOf('=') !== -1) {\r\n              num_2 = factor_2.substr(1, factor_2.length);\r\n            } else {\r\n              if (minum === 0) {minum=1;}\r\n              num_2 = parseInt(get_rnd_int(minum, maxum) * factor_2);\r\n            }\r\n\r\n            res = parseInt(get_rnd_int(minum, maxum));\r\n            num_1 = res * num_2;\r\n        break;\r\n\r\n        case OPERATION_GREATER: // >\r\n          res = '>';\r\n          num_1 = parseInt(get_rnd_int(minum+1, maxum) * factor_1);\r\n          num_2 = parseInt(get_rnd_int(minum, num_1-1) * factor_2);\r\n        break;\r\n\r\n        case OPERATION_SMALLER: // <\r\n          res = '<';\r\n          num_1 = parseInt(get_rnd_int(minum, maxum-1) * factor_1);\r\n          num_2 = parseInt(get_rnd_int(num_1+1, maxum) * factor_2);\r\n        break;\r\n\r\n        case OPERATION_EQUALLY: // =\r\n          res = '=';\r\n          num_1 = parseInt(get_rnd_int(minum, maxum) * factor_1);\r\n          num_2 = num_1;\r\n        break;\r\n\r\n        default:\r\n          alert(\"RND generator error: Unknown math operation '\" + operation + \"'\");\r\n          return;\r\n      }\r\n\r\n/*\r\n      if ((operation === OPERATION_SUM) ||\r\n          (operation === OPERATION_SUB) ||\r\n          (operation === OPERATION_MUL) ||\r\n          (operation === OPERATION_DIV)) {\r\n        // randomNumber is true => swap num_1 & num_2\r\n        var randomNumber = Math.random() >= 0.5;\r\n        if (randomNumber) {\r\n            var tmp = num_1; num_1 = num_2; num_2 = tmp;\r\n        }\r\n      }\r\n*/\r\n      return {'number_1': num_1,\r\n              'number_2': num_2,\r\n              'operation': operation,\r\n              'result': res};\r\n}\r\n","import React from 'react';\r\nimport './keyboard.css';\r\n\r\n/*\r\n        <button id=\"dot\" onClick={this.props.onDecimal}>.</button>\r\n        <button id=\"clear\" onClick={this.props.onClear}>Clear</button>\r\n\r\n        <button id=\"subtract\" onClick={this.props.onOperator}> > </button>\r\n        <button id=\"equals\" onClick={this.props.onOperator}>   = </button>\r\n        <button id=\"subtract\" onClick={this.props.onOperator}> < </button>\r\n*/\r\n// export default function SMKeyBoard(props) {\r\nexport default class SMKeyBoard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"keyboard\">\r\n        <button id=\"seven\" onClick={this.props.onDigit}>7</button>\r\n        <button id=\"eight\" onClick={this.props.onDigit}>8</button>\r\n        <button id=\"nine\" onClick={this.props.onDigit}>9</button>\r\n\r\n        <button id=\"four\" onClick={this.props.onDigit}>4</button>\r\n        <button id=\"five\" onClick={this.props.onDigit}>5</button>\r\n        <button id=\"six\" onClick={this.props.onDigit}>6</button>\r\n\r\n        <button id=\"one\" onClick={this.props.onDigit}>1</button>\r\n        <button id=\"two\" onClick={this.props.onDigit}>2</button>\r\n        <button id=\"three\" onClick={this.props.onDigit}>3</button>\r\n\r\n        <button id=\"subtract\" onClick={this.props.onOperator}>-</button>\r\n        <button id=\"zero\" onClick={this.props.onDigit}>0</button>\r\n        <button id=\"add\" onClick={this.props.onOperator}>+</button>\r\n\r\n        <button id=\"more\" onClick={this.props.onOperator}>&#62;</button>\r\n        <button id=\"equals\" onClick={this.props.onOperator}>=</button>\r\n        <button id=\"less\" onClick={this.props.onOperator}>&#60;</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n/*\r\n    tbd: somehow via array in Reactjs\r\n    const circles = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n*/\r\nexport default function SMCircles(props) {\r\n    return (\r\n        <>\r\n            <svg height=\"100\" width=\"100\">\r\n                <circle cx={50} cy={50} r={17} stroke=\"black\" strokeWidth=\"1\" fill=\"green\" />\r\n            </svg>\r\n\r\n            <svg height=\"100\" width=\"100\">\r\n                <circle cx={50} cy={50} r={17} stroke=\"black\" strokeWidth=\"1\" fill=\"green\" />\r\n            </svg>\r\n\r\n            <svg height=\"100\" width=\"100\">\r\n                <circle cx={50} cy={50} r={17} stroke=\"black\" strokeWidth=\"1\" fill=\"green\" />\r\n            </svg>\r\n\r\n            <svg height=\"100\" width=\"100\">\r\n                <circle cx={50} cy={50} r={17} stroke=\"black\" strokeWidth=\"1\" fill=\"green\" />\r\n            </svg>\r\n\r\n            <svg height=\"100\" width=\"100\">\r\n                <circle cx={50} cy={50} r={17} stroke=\"black\" strokeWidth=\"1\" fill=\"green\" />\r\n            </svg>\r\n\r\n            <svg height=\"100\" width=\"100\">\r\n                <circle cx={50} cy={50} r={17} stroke=\"black\" strokeWidth=\"1\" fill=\"yellow\" />\r\n            </svg>\r\n\r\n            <svg height=\"100\" width=\"100\">\r\n                <circle cx={50} cy={50} r={17} stroke=\"black\" strokeWidth=\"1\" fill=\"yellow\" />\r\n            </svg>\r\n\r\n            <svg height=\"100\" width=\"100\">\r\n                <circle cx={50} cy={50} r={17} stroke=\"black\" strokeWidth=\"1\" fill=\"red\" />\r\n            </svg>\r\n\r\n            <svg height=\"100\" width=\"100\">\r\n                <circle cx={50} cy={50} r={17} stroke=\"black\" strokeWidth=\"1\" fill=\"red\" />\r\n            </svg>\r\n\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Dialog} from '@material-ui/core';\r\n\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\n\r\nimport {generate_rnd_task} from \"./../halpers/functions\";\r\n\r\nimport SMKeyBoard from \"./../keyboard/keyboard\";\r\nimport SMCircles from \"./circles\";\r\n\r\nimport './simplegame.css';\r\n\r\n/*\r\n\r\n*/\r\nexport default class SMSimpleGame extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onDigit = this.onDigit.bind(this);\r\n        this.onOperator = this.onOperator.bind(this);\r\n        this.onKeyboard = this.onKeyboard.bind(this);\r\n\r\n        /*\r\n            {'number_1': num_1, 'number_2': num_2, 'operation': task_operation, 'result': res};\r\n        */\r\n        this.task = generate_rnd_task('+-', '0,10');\r\n        this.user_enter = '';\r\n        this.state = {number_1: this.task.number_1,\r\n                      operation: this.task.operation,\r\n                      number_2: this.task.number_2,\r\n                      result: '?',\r\n                      color: 'grey',\r\n                      decoration: '',\r\n                      counter: 0,\r\n                      passed: 0,\r\n                      failed: 0,\r\n                      attempt: 0};\r\n    }\r\n\r\n    set_failed(digit) {\r\n        console.log(\"FAILED from \" + this.state.attempt + \" attempts\");\r\n        if (this.state.attempt === 0) {\r\n            this.setState({color: 'red',\r\n                           result: digit,\r\n                           counter: this.state.counter + 1,\r\n                           failed: this.state.failed + 1,\r\n                           attempt: this.state.attempt + 1});\r\n        } else {\r\n            this.setState({color: 'red',\r\n                           result: digit,\r\n                           attempt: this.state.attempt + 1});\r\n        }\r\n        // clear result value in 1.5 seconds\r\n        setTimeout(() => {this.setState({color: 'grey', result: '?'});}, 800);\r\n    }\r\n\r\n    set_passed(digit) {\r\n        console.log(\"PASSED from \" + this.state.attempt + \" attempts\");\r\n        if (this.state.attempt === 0) {\r\n            this.setState({color: 'green',\r\n                           result: digit,\r\n                           counter: this.state.counter + 1,\r\n                           passed: this.state.passed + 1});\r\n        } else {\r\n            this.setState({color: 'green',\r\n                           result: digit});\r\n        }\r\n        // generate new task and update\r\n        setTimeout(() => {this.proceed_with_next_task()}, 800);\r\n    }\r\n\r\n    set_interim(digit) {\r\n        this.setState({color: 'black',\r\n                       result: digit});\r\n    }\r\n\r\n    proceed_with_next_task() {\r\n        this.task = generate_rnd_task('+-', '0,10');\r\n        this.setState({number_1: this.task.number_1,\r\n                       operation: this.task.operation,\r\n                       number_2: this.task.number_2,\r\n                       color: 'grey',\r\n                       result: '?',\r\n                       attempt: 0});\r\n    }\r\n\r\n    check_response(digit) {\r\n        var expected_result = this.task.result.toString();\r\n        if (expected_result.length === 1) {\r\n            if (digit === expected_result) {\r\n                this.set_passed(digit);\r\n            } else {\r\n                this.set_failed(digit);\r\n            }\r\n\r\n        } else if (expected_result.length === 2) {\r\n            if (this.state.result === '?') {\r\n                if (expected_result.charAt(0).toString() === digit) {\r\n                    this.set_interim(digit);\r\n                } else {\r\n                    this.set_failed(digit);\r\n                }\r\n            } else if (this.state.result.length === 1) {\r\n                var current = this.state.result + digit;\r\n                if (current === expected_result) {\r\n                    this.set_passed(current);\r\n                } else {\r\n                    this.set_failed(current);\r\n                }\r\n            }\r\n\r\n        } else if (this.task.result.toString().length === 3) {\r\n            console.log(\"tbd...not implemented yet.\");\r\n        }\r\n    }\r\n\r\n    onDigit({ target }) {\r\n        console.log(\"onDigit \" + target.innerText);\r\n        this.check_response((target.innerText).toString());\r\n    }\r\n\r\n    onOperator({ target }) {\r\n        const operator = target.innerText;\r\n        console.log(\"onOperator \" + operator);\r\n        // tbd...\r\n    }\r\n\r\n    onKeyboard({ key }) {\r\n        console.log(\"onKeyboard \" + key);\r\n    }\r\n\r\n    /*\r\n        <Dialog onClose={() => this.props.onClick()} fullScreen={true} open={this.props.open}>\r\n        https://about.phamvanlam.com/calculator/\r\n\r\n        Warning: The tag <text> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.\r\n                            <text style={{color: 'black'}}>{this.state.counter}</text> &nbsp; &#128279; &nbsp;\r\n                            <text style={{color: 'green'}}>{this.state.passed}</text> &nbsp; &#128515; &nbsp;\r\n                            <text style={{color: 'red'}}>{this.state.failed}</text> &nbsp; &#128169;\r\n\r\n    */\r\n    render() {\r\n        return (\r\n            <Dialog onClose={() => this.props.onClick()} fullScreen={true} open={true}>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"header_div\">\r\n                        <div className=\"header_div_left\">SUPERMATH</div>\r\n                        <div className=\"header_div_right\">\r\n                            <font style={{color: 'black'}}>{this.state.counter}</font> &nbsp; &#128279; &nbsp;\r\n                            <font style={{color: 'green'}}>{this.state.passed}</font> &nbsp; &#128515; &nbsp;\r\n                            <font style={{color: 'red'}}>{this.state.failed}</font> &nbsp; &#128169;\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"body_div\">\r\n                        <div className=\"body_div_left\">\r\n                            <div className=\"gameboard\">\r\n                                <div className=\"gameplay\">\r\n                                    <div className=\"mo_task\">{this.state.number_1}</div>\r\n                                    <div className=\"mo_task\">{this.state.operation}   {this.state.number_2}</div>\r\n                                    <div className=\"black_line\"> </div>\r\n                                    <div className=\"mo_result\" style={{color: this.state.color}}>{this.state.result}</div>\r\n                                </div>\r\n\r\n                                <div className=\"gamehalper\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"body_div_right\">\r\n                            <KeyboardEventHandler handleKeys={['all']} onKeyEvent={(key, e) => console.log('QQQQQ' + key)} />\r\n                            <SMKeyBoard onDigit={this.onDigit} onOperator={this.onOperator} onKeyboard={this.onKeyboard}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"footer_div\">\r\n                        <SMCircles />\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport {Typography, Container, Grid, Button} from '@material-ui/core';\r\nimport {Card, CardActions, CardActionArea, CardContent, CardMedia} from '@material-ui/core';\r\n\r\nimport logo1 from './../../images/ru_white_1.jpg';\r\nimport logo2 from './../../images/ru_white_2.jpg';\r\nimport logo3 from './../../images/ru_white_3.jpg';\r\nimport logo4 from './../../images/ru_white_4.jpg';\r\nimport logo5 from './../../images/ru_white_5.jpg';\r\nimport logo6 from './../../images/ru_white_6.jpg';\r\nimport logo7 from './../../images/ru_white_7.jpg';\r\nimport logo8 from './../../images/ru_white_8.jpg';\r\nimport logo9 from './../../images/ru_white_9.jpg';\r\n\r\nimport classes from './../../index.css';\r\n\r\nimport SMDialogInfo from \"./info\";\r\nimport SMSimpleGame from \"./../games/simplegame\";\r\n\r\nconst cards = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n\r\nconst images = [logo1, logo2, logo3, logo4, logo5, logo6, logo7, logo8, logo9];\r\n\r\nconst titles = [\r\n    \"One-digit Comparision\",\r\n    \"One-digit Addition\",\r\n    \"One-digit Subtraction\",\r\n    \"One-digit Addition & Subtraction\",\r\n    \"Determination operation\",\r\n    \"Two-digit Comparision\",\r\n    \"Addition and Subtraction rounds\",\r\n    \"One- & Two- digit Addition & Subtraction\",\r\n    \"Two- digit Addition & Subtraction\"\r\n];\r\n\r\nconst headers = [\r\n    \"Tasks for Comparision of one-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Addition of one-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Subtraction of one-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Addition and Subtraction of one-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Determination of one from the two mathematical operation: Addition or Subtraction\",\r\n    \"Tasks for Comparision of two-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Addition and Subtraction of round numbers from 10 to 100 (numbers 10, 20, 30 ... 100)\",\r\n    \"Tasks for Addition and Subtraction of one- and two- digit numbers\",\r\n    \"Tasks for Addition and Subtraction of two- digit numbers\"\r\n];\r\n\r\nvar desciptions = [\r\n    \"Tasks for kids in age 3 - 6 years for Comparision of one-digit numbers (from 0 to 9), where you can to use only more (>), less (<) and equal (=) labels and have 10 seconds timeout to solve each task\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\r\n    \"Tasks for kids in age 3 - 6 years for Subtraction of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition and <b>Subtraction</b> of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\r\n    \"Tasks for kids in age 3 - 6 years for Understanding of one of two mathematical operation: addition or subtraction. You will know both arguments (numbers), the result of an operation and have 10 seconds timeout to solve each task\",\r\n    \"Tasks for kids in age 3 - 6 years for Comparision of two-digit numbers (from 0 to 9), where you can to use only more (>), less (<) and equal (=) labels and have 10 seconds timeout to solve each task\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition and Subtraction of round numbers from 10 to 100 (numbers 10, 20, 30 ... 100). You have 10 seconds timeout to solve each task\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition and Subtraction of one- and two- digit numbers. TBD.\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition and Subtraction of two-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\r\n];\r\n\r\n// https://source.unsplash.com/random\r\nexport default class SMBody extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {infoOpen: false,\r\n                      viewDialogTitleText: \"\",\r\n                      viewDialogDescriptionText: \"\",\r\n                      viewDialogImageUrl: \"\",\r\n                      gameOpen: false,\r\n                      gameInfo: false};\r\n        this.handleInfoOpen = this.handleInfoOpen.bind(this);\r\n        this.handleGameOpen = this.handleGameOpen.bind(this);\r\n    }\r\n    handleInfoOpen(card_id) {\r\n        this.setState({infoOpen: true });\r\n        this.setState({infoTitle: headers[card_id]});\r\n        this.setState({infoText: desciptions[card_id]});\r\n        this.setState({infoIURL: images[card_id]});\r\n    }\r\n    handleGameOpen(card_id) {\r\n        this.setState({gameOpen: true});\r\n    }\r\n\r\n    render() {\r\n        const section = {\r\n            width: '100%',\r\n            marginTop: '2%',\r\n            backgroundColor: 'white',\r\n            fontFamily: \"Grinched\",\r\n            fontVariant: \"small-caps\",\r\n            color: \"green\",\r\n        }\r\n\r\n        return (\r\n            <main>\r\n                <Typography variant=\"h1\" align=\"center\" style={section} paragraph>\r\n                    SuperMath \r\n                </Typography>\r\n\r\n                <Container className={classes.grid} maxWidth=\"md\">\r\n                    <Grid container spacing={4}>\r\n                        {cards.map(card => (\r\n                            <Grid item key={card} xs={12} sm={6} md={4}>\r\n                                <Card className={classes.card}>\r\n                                    <CardActionArea onClick={(e) => this.handleGameOpen(card)}>\r\n                                        <CardMedia component=\"img\" alt=\"Media Card task\" height=\"140\" image={images[card]}/>\r\n                                        <CardContent className={classes.content}>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">{titles[card]}</Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{headers[card]}</Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>    \r\n                                    <CardActions>\r\n                                        <Button size=\"small\" color=\"primary\" onClick={(e) => this.handleInfoOpen(card)}>View Task Details</Button>\r\n                                        <Button size=\"small\" color=\"primary\" onClick={(e) => this.handleGameOpen(card)}>Play</Button>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n\r\n                    <SMDialogInfo open={this.state.infoOpen}\r\n                                  title={this.state.infoTitle}\r\n                                  text={this.state.infoText}\r\n                                  imgUrl={this.state.infoIURL}\r\n                                  onClick={() => this.setState({infoOpen: false})}/>\r\n\r\n                    <SMSimpleGame open={this.state.gameOpen}\r\n                                  onClick={() => this.setState({gameOpen: false})}/>\r\n                </Container>\r\n          </main>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default function SMFooter(props) {\r\n    return (\r\n      <footer>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n          <Link color=\"inherit\" href=\"https://supermath.ru/\">{props.text}</Link>{' '} {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n      </footer>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport SMHeader from \"./components/header/header\";\r\nimport SMBody from \"./components/body/body\";\r\nimport SMFooter from \"./components/footer/footer\";\r\n\r\n/*\r\n    SuperMath Page Layout Elements\r\n    <SMMainPage>\r\n        <SMHeader> - defines a header for a document with container for navigation links:\r\n                - Home\r\n                - About\r\n                - Help\r\n                - Login (TBD, need to add Profile, Logout etc.)\r\n                - Language selector\r\n\r\n        <SMBody> - defines a main section with:\r\n            - main SuperMath Logo exactly under navigation bar\r\n            - playing cards/games on the page\r\n\r\n        <SMFooter> - defines a footer with Copyright\r\n\r\n        render() {\r\n          return (\r\n            <React.Fragment>\r\n              <ChildA />\r\n              <ChildB />\r\n              <ChildC />\r\n            </React.Fragment>\r\n          );}\r\n*/\r\nexport default class SuperMathPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <SMHeader />\r\n                <SMBody />\r\n                <SMFooter text={\"SuperMath.RU\"}/>\r\n            </React.Fragment>\r\n        );}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './sw';\r\n\r\nimport './fonts/Grinched2.0.ttf'\r\nimport SuperMathPage from './supermathpage';\r\n\r\nReactDOM.render(<SuperMathPage />, document.getElementById('supermath_app'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
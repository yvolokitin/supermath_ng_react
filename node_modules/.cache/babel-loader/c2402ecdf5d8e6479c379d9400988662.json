{"ast":null,"code":"var _jsxFileName = \"E:\\\\supermath_ng\\\\supermath_ng_react\\\\src\\\\components\\\\games\\\\simplegame.js\";\nimport React from 'react';\nimport { Dialog } from '@material-ui/core';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport { generate_rnd_task } from \"./../halpers/functions\";\nimport SMKeyBoard from \"./../keyboard/keyboard\";\nimport SMCircles from \"./circles\";\nimport './simplegame.css';\n/*\n\n*/\n\nexport default class SMSimpleGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onDigit = this.onDigit.bind(this);\n    this.onOperator = this.onOperator.bind(this);\n    this.onKeyboard = this.onKeyboard.bind(this);\n    /*\n        {'number_1': num_1, 'number_2': num_2, 'operation': task_operation, 'result': res};\n    */\n\n    this.task = generate_rnd_task('+-', '0,10');\n    this.user_enter = '';\n    this.state = {\n      number_1: this.task.number_1,\n      operation: this.task.operation,\n      number_2: this.task.number_2,\n      result: '?',\n      color: 'grey',\n      decoration: '',\n      counter: 0,\n      passed: 0,\n      failed: 0,\n      attempt: 0\n    };\n  }\n\n  set_failed(digit) {\n    console.log(\"FAILED from \" + this.state.attempt + \" attempts\");\n\n    if (this.state.attempt === 0) {\n      this.setState({\n        color: 'red',\n        result: digit,\n        counter: this.state.counter + 1,\n        failed: this.state.failed + 1,\n        attempt: this.state.attempt + 1\n      });\n    } else {\n      this.setState({\n        color: 'red',\n        result: digit,\n        attempt: this.state.attempt + 1\n      });\n    } // clear result value in 1.5 seconds\n\n\n    setTimeout(() => {\n      this.setState({\n        color: 'grey',\n        result: '?'\n      });\n    }, 800);\n  }\n\n  set_passed(digit) {\n    console.log(\"PASSED from \" + this.state.attempt + \" attempts\");\n\n    if (this.state.attempt === 0) {\n      this.setState({\n        color: 'green',\n        result: digit,\n        counter: this.state.counter + 1,\n        passed: this.state.passed + 1\n      });\n    } else {\n      this.setState({\n        color: 'green',\n        result: digit\n      });\n    } // generate new task and update\n\n\n    setTimeout(() => {\n      this.proceed_with_next_task();\n    }, 800);\n  }\n\n  set_interim(digit) {\n    this.setState({\n      color: 'black',\n      result: digit\n    });\n  }\n\n  proceed_with_next_task() {\n    this.task = generate_rnd_task('+-', '0,10');\n    this.setState({\n      number_1: this.task.number_1,\n      operation: this.task.operation,\n      number_2: this.task.number_2,\n      color: 'grey',\n      result: '?',\n      attempt: 0\n    });\n  }\n\n  check_response(digit) {\n    var expected_result = this.task.result.toString();\n\n    if (expected_result.length === 1) {\n      if (digit === expected_result) {\n        this.set_passed(digit);\n      } else {\n        this.set_failed(digit);\n      }\n    } else if (expected_result.length === 2) {\n      if (this.state.result === '?') {\n        if (expected_result.charAt(0).toString() === digit) {\n          this.set_interim(digit);\n        } else {\n          this.set_failed(digit);\n        }\n      } else if (this.state.result.length === 1) {\n        var current = this.state.result + digit;\n\n        if (current === expected_result) {\n          this.set_passed(current);\n        } else {\n          this.set_failed(current);\n        }\n      }\n    } else if (this.task.result.toString().length === 3) {\n      console.log(\"tbd...not implemented yet.\");\n    }\n  }\n\n  onDigit({\n    target\n  }) {\n    console.log(\"onDigit \" + target.innerText);\n    this.check_response(target.innerText.toString());\n  }\n\n  onOperator({\n    target\n  }) {\n    const operator = target.innerText;\n    console.log(\"onOperator \" + operator); // tbd...\n  }\n\n  onKeyboard({\n    key\n  }) {\n    console.log(\"onKeyboard \" + key);\n  }\n  /*\n      <Dialog onClose={() => this.props.onClick()} fullScreen={true} open={this.props.open}>\n      https://about.phamvanlam.com/calculator/\n       Warning: The tag <text> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.\n                          <text style={{color: 'black'}}>{this.state.counter}</text> &nbsp; &#128279; &nbsp;\n                          <text style={{color: 'green'}}>{this.state.passed}</text> &nbsp; &#128515; &nbsp;\n                          <text style={{color: 'red'}}>{this.state.failed}</text> &nbsp; &#128169;\n   */\n\n\n  render() {\n    return React.createElement(Dialog, {\n      onClose: () => this.props.onClick(),\n      fullScreen: true,\n      open: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header_div_left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"SUPERMATH\"), React.createElement(\"div\", {\n      className: \"header_div_right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"font\", {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.state.counter), \" \\xA0 \\uD83D\\uDD17 \\xA0\", React.createElement(\"font\", {\n      style: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.state.passed), \" \\xA0 \\uD83D\\uDE03 \\xA0\", React.createElement(\"font\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.failed), \" \\xA0 \\uD83D\\uDCA9\")), React.createElement(\"div\", {\n      className: \"body_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"body_div_left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gameboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gameplay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mo_task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.state.number_1), React.createElement(\"div\", {\n      className: \"mo_task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.state.operation, \"   \", this.state.number_2), React.createElement(\"div\", {\n      className: \"black_line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \" \"), React.createElement(\"div\", {\n      className: \"mo_result\",\n      style: {\n        color: this.state.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.state.result)), React.createElement(\"div\", {\n      className: \"gamehalper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"body_div_right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(KeyboardEventHandler, {\n      handleKeys: ['all'],\n      onKeyEvent: (key, e) => console.log('QQQQQ' + key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(SMKeyBoard, {\n      onDigit: this.onDigit,\n      onOperator: this.onOperator,\n      onKeyboard: this.onKeyboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"footer_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(SMCircles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["E:/supermath_ng/supermath_ng_react/src/components/games/simplegame.js"],"names":["React","Dialog","KeyboardEventHandler","generate_rnd_task","SMKeyBoard","SMCircles","SMSimpleGame","Component","constructor","props","onDigit","bind","onOperator","onKeyboard","task","user_enter","state","number_1","operation","number_2","result","color","decoration","counter","passed","failed","attempt","set_failed","digit","console","log","setState","setTimeout","set_passed","proceed_with_next_task","set_interim","check_response","expected_result","toString","length","charAt","current","target","innerText","operator","key","render","onClick","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Dialog} from '@material-ui/core';\n\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nimport {generate_rnd_task} from \"./../halpers/functions\";\n\nimport SMKeyBoard from \"./../keyboard/keyboard\";\nimport SMCircles from \"./circles\";\n\nimport './simplegame.css';\n\n/*\n\n*/\nexport default class SMSimpleGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onDigit = this.onDigit.bind(this);\n        this.onOperator = this.onOperator.bind(this);\n        this.onKeyboard = this.onKeyboard.bind(this);\n\n        /*\n            {'number_1': num_1, 'number_2': num_2, 'operation': task_operation, 'result': res};\n        */\n        this.task = generate_rnd_task('+-', '0,10');\n        this.user_enter = '';\n        this.state = {number_1: this.task.number_1,\n                      operation: this.task.operation,\n                      number_2: this.task.number_2,\n                      result: '?',\n                      color: 'grey',\n                      decoration: '',\n                      counter: 0,\n                      passed: 0,\n                      failed: 0,\n                      attempt: 0};\n    }\n\n    set_failed(digit) {\n        console.log(\"FAILED from \" + this.state.attempt + \" attempts\");\n        if (this.state.attempt === 0) {\n            this.setState({color: 'red',\n                           result: digit,\n                           counter: this.state.counter + 1,\n                           failed: this.state.failed + 1,\n                           attempt: this.state.attempt + 1});\n        } else {\n            this.setState({color: 'red',\n                           result: digit,\n                           attempt: this.state.attempt + 1});\n        }\n        // clear result value in 1.5 seconds\n        setTimeout(() => {this.setState({color: 'grey', result: '?'});}, 800);\n    }\n\n    set_passed(digit) {\n        console.log(\"PASSED from \" + this.state.attempt + \" attempts\");\n        if (this.state.attempt === 0) {\n            this.setState({color: 'green',\n                           result: digit,\n                           counter: this.state.counter + 1,\n                           passed: this.state.passed + 1});\n        } else {\n            this.setState({color: 'green',\n                           result: digit});\n        }\n        // generate new task and update\n        setTimeout(() => {this.proceed_with_next_task()}, 800);\n    }\n\n    set_interim(digit) {\n        this.setState({color: 'black',\n                       result: digit});\n    }\n\n    proceed_with_next_task() {\n        this.task = generate_rnd_task('+-', '0,10');\n        this.setState({number_1: this.task.number_1,\n                       operation: this.task.operation,\n                       number_2: this.task.number_2,\n                       color: 'grey',\n                       result: '?',\n                       attempt: 0});\n    }\n\n    check_response(digit) {\n        var expected_result = this.task.result.toString();\n        if (expected_result.length === 1) {\n            if (digit === expected_result) {\n                this.set_passed(digit);\n            } else {\n                this.set_failed(digit);\n            }\n\n        } else if (expected_result.length === 2) {\n            if (this.state.result === '?') {\n                if (expected_result.charAt(0).toString() === digit) {\n                    this.set_interim(digit);\n                } else {\n                    this.set_failed(digit);\n                }\n            } else if (this.state.result.length === 1) {\n                var current = this.state.result + digit;\n                if (current === expected_result) {\n                    this.set_passed(current);\n                } else {\n                    this.set_failed(current);\n                }\n            }\n\n        } else if (this.task.result.toString().length === 3) {\n            console.log(\"tbd...not implemented yet.\");\n        }\n    }\n\n    onDigit({ target }) {\n        console.log(\"onDigit \" + target.innerText);\n        this.check_response((target.innerText).toString());\n    }\n\n    onOperator({ target }) {\n        const operator = target.innerText;\n        console.log(\"onOperator \" + operator);\n        // tbd...\n    }\n\n    onKeyboard({ key }) {\n        console.log(\"onKeyboard \" + key);\n    }\n\n    /*\n        <Dialog onClose={() => this.props.onClick()} fullScreen={true} open={this.props.open}>\n        https://about.phamvanlam.com/calculator/\n\n        Warning: The tag <text> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.\n                            <text style={{color: 'black'}}>{this.state.counter}</text> &nbsp; &#128279; &nbsp;\n                            <text style={{color: 'green'}}>{this.state.passed}</text> &nbsp; &#128515; &nbsp;\n                            <text style={{color: 'red'}}>{this.state.failed}</text> &nbsp; &#128169;\n\n    */\n    render() {\n        return (\n            <Dialog onClose={() => this.props.onClick()} fullScreen={true} open={true}>\n                <div className=\"wrapper\">\n                    <div className=\"header_div\">\n                        <div className=\"header_div_left\">SUPERMATH</div>\n                        <div className=\"header_div_right\">\n                            <font style={{color: 'black'}}>{this.state.counter}</font> &nbsp; &#128279; &nbsp;\n                            <font style={{color: 'green'}}>{this.state.passed}</font> &nbsp; &#128515; &nbsp;\n                            <font style={{color: 'red'}}>{this.state.failed}</font> &nbsp; &#128169;\n                        </div>\n                    </div>\n\n                    <div className=\"body_div\">\n                        <div className=\"body_div_left\">\n                            <div className=\"gameboard\">\n                                <div className=\"gameplay\">\n                                    <div className=\"mo_task\">{this.state.number_1}</div>\n                                    <div className=\"mo_task\">{this.state.operation}   {this.state.number_2}</div>\n                                    <div className=\"black_line\"> </div>\n                                    <div className=\"mo_result\" style={{color: this.state.color}}>{this.state.result}</div>\n                                </div>\n\n                                <div className=\"gamehalper\">\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"body_div_right\">\n                            <KeyboardEventHandler handleKeys={['all']} onKeyEvent={(key, e) => console.log('QQQQQ' + key)} />\n                            <SMKeyBoard onDigit={this.onDigit} onOperator={this.onOperator} onKeyboard={this.onKeyboard}/>\n                        </div>\n                    </div>\n\n                    <div className=\"footer_div\">\n                        <SMCircles />\n                    </div>\n                </div>\n            </Dialog>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
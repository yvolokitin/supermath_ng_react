{"ast":null,"code":"import _classCallCheck from\"E:\\\\supermath_ng\\\\supermath_ng_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\supermath_ng\\\\supermath_ng_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"E:\\\\supermath_ng\\\\supermath_ng_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"E:\\\\supermath_ng\\\\supermath_ng_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"E:\\\\supermath_ng\\\\supermath_ng_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"E:\\\\supermath_ng\\\\supermath_ng_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{Typography,Container,Grid,Button}from'@material-ui/core';import{Card,CardActions,CardActionArea,CardContent,CardMedia}from'@material-ui/core';import logo1 from'./../../images/ru_white_1.jpg';import logo2 from'./../../images/ru_white_2.jpg';import logo3 from'./../../images/ru_white_3.jpg';import logo4 from'./../../images/ru_white_4.jpg';import logo5 from'./../../images/ru_white_5.jpg';import logo6 from'./../../images/ru_white_6.jpg';import logo7 from'./../../images/ru_white_7.jpg';import logo8 from'./../../images/ru_white_8.jpg';import logo9 from'./../../images/ru_white_9.jpg';import classes from'./../../index.css';import SMDialogInfo from\"./info\";import SMSimpleGame from\"./../games/simplegame\";var cards=[0,1,2,3,4,5,6,7,8];var images=[logo1,logo2,logo3,logo4,logo5,logo6,logo7,logo8,logo9];var titles=[\"One-digit Comparision\",\"One-digit Addition\",\"One-digit Subtraction\",\"One-digit Addition & Subtraction\",\"Determination operation\",\"Two-digit Comparision\",\"Addition and Subtraction rounds\",\"One- & Two- digit Addition & Subtraction\",\"Two- digit Addition & Subtraction\"];var headers=[\"Tasks for Comparision of one-digit numbers (from 0 to 9)\",\"Tasks for Addition of one-digit numbers (from 0 to 9)\",\"Tasks for Subtraction of one-digit numbers (from 0 to 9)\",\"Tasks for Addition and Subtraction of one-digit numbers (from 0 to 9)\",\"Tasks for Determination of one from the two mathematical operation: Addition or Subtraction\",\"Tasks for Comparision of two-digit numbers (from 0 to 9)\",\"Tasks for Addition and Subtraction of round numbers from 10 to 100 (numbers 10, 20, 30 ... 100)\",\"Tasks for Addition and Subtraction of one- and two- digit numbers\",\"Tasks for Addition and Subtraction of two- digit numbers\"];var desciptions=[\"Tasks for kids in age 3 - 6 years for Comparision of one-digit numbers (from 0 to 9), where you can to use only more (>), less (<) and equal (=) labels and have 10 seconds timeout to solve each task\",\"Tasks for kids in age 3 - 6 years for Addition of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\"Tasks for kids in age 3 - 6 years for Subtraction of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\"Tasks for kids in age 3 - 6 years for Addition and <b>Subtraction</b> of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\"Tasks for kids in age 3 - 6 years for Understanding of one of two mathematical operation: addition or subtraction. You will know both arguments (numbers), the result of an operation and have 10 seconds timeout to solve each task\",\"Tasks for kids in age 3 - 6 years for Comparision of two-digit numbers (from 0 to 9), where you can to use only more (>), less (<) and equal (=) labels and have 10 seconds timeout to solve each task\",\"Tasks for kids in age 3 - 6 years for Addition and Subtraction of round numbers from 10 to 100 (numbers 10, 20, 30 ... 100). You have 10 seconds timeout to solve each task\",\"Tasks for kids in age 3 - 6 years for Addition and Subtraction of one- and two- digit numbers. TBD.\",\"Tasks for kids in age 3 - 6 years for Addition and Subtraction of two-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\"];// https://source.unsplash.com/random\nvar SMBody=/*#__PURE__*/function(_React$Component){_inherits(SMBody,_React$Component);function SMBody(props){var _this;_classCallCheck(this,SMBody);_this=_possibleConstructorReturn(this,_getPrototypeOf(SMBody).call(this,props));_this.state={infoOpen:false,viewDialogTitleText:\"\",viewDialogDescriptionText:\"\",viewDialogImageUrl:\"\",gameOpen:false,gameInfo:false};_this.handleInfoOpen=_this.handleInfoOpen.bind(_assertThisInitialized(_this));_this.handleGameOpen=_this.handleGameOpen.bind(_assertThisInitialized(_this));return _this;}_createClass(SMBody,[{key:\"handleInfoOpen\",value:function handleInfoOpen(card_id){this.setState({infoOpen:true});this.setState({infoTitle:headers[card_id]});this.setState({infoText:desciptions[card_id]});this.setState({infoIURL:images[card_id]});}},{key:\"handleGameOpen\",value:function handleGameOpen(card_id){this.setState({gameOpen:true});}},{key:\"render\",value:function render(){var _this2=this;var section={width:'100%',marginTop:'2%',backgroundColor:'white',fontFamily:\"Grinched\",fontVariant:\"small-caps\",color:\"green\"};return React.createElement(\"main\",null,React.createElement(Typography,{variant:\"h1\",align:\"center\",style:section,paragraph:true},\"SuperMath\"),React.createElement(Container,{className:classes.grid,maxWidth:\"md\"},React.createElement(Grid,{container:true,spacing:4},cards.map(function(card){return React.createElement(Grid,{item:true,key:card,xs:12,sm:6,md:4},React.createElement(Card,{className:classes.card},React.createElement(CardActionArea,{onClick:function onClick(e){return _this2.handleGameOpen(card);}},React.createElement(CardMedia,{component:\"img\",alt:\"Media Card task\",height:\"140\",image:images[card]}),React.createElement(CardContent,{className:classes.content},React.createElement(Typography,{gutterBottom:true,variant:\"h5\",component:\"h2\"},titles[card]),React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\",component:\"p\"},headers[card]))),React.createElement(CardActions,null,React.createElement(Button,{size:\"small\",color:\"primary\",onClick:function onClick(e){return _this2.handleInfoOpen(card);}},\"View Task Details\"),React.createElement(Button,{size:\"small\",color:\"primary\",onClick:function onClick(e){return _this2.handleGameOpen(card);}},\"Play\"))));})),React.createElement(SMDialogInfo,{open:this.state.infoOpen,title:this.state.infoTitle,text:this.state.infoText,imgUrl:this.state.infoIURL,onClick:function onClick(){return _this2.setState({infoOpen:false});}}),React.createElement(SMSimpleGame,{open:this.state.gameOpen,onClick:function onClick(){return _this2.setState({gameOpen:false});}})));}}]);return SMBody;}(React.Component);export{SMBody as default};","map":{"version":3,"sources":["E:/supermath_ng/supermath_ng_react/src/components/body/body.js"],"names":["React","Typography","Container","Grid","Button","Card","CardActions","CardActionArea","CardContent","CardMedia","logo1","logo2","logo3","logo4","logo5","logo6","logo7","logo8","logo9","classes","SMDialogInfo","SMSimpleGame","cards","images","titles","headers","desciptions","SMBody","props","state","infoOpen","viewDialogTitleText","viewDialogDescriptionText","viewDialogImageUrl","gameOpen","gameInfo","handleInfoOpen","bind","handleGameOpen","card_id","setState","infoTitle","infoText","infoIURL","section","width","marginTop","backgroundColor","fontFamily","fontVariant","color","grid","map","card","e","content","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport {Typography, Container, Grid, Button} from '@material-ui/core';\r\nimport {Card, CardActions, CardActionArea, CardContent, CardMedia} from '@material-ui/core';\r\n\r\nimport logo1 from './../../images/ru_white_1.jpg';\r\nimport logo2 from './../../images/ru_white_2.jpg';\r\nimport logo3 from './../../images/ru_white_3.jpg';\r\nimport logo4 from './../../images/ru_white_4.jpg';\r\nimport logo5 from './../../images/ru_white_5.jpg';\r\nimport logo6 from './../../images/ru_white_6.jpg';\r\nimport logo7 from './../../images/ru_white_7.jpg';\r\nimport logo8 from './../../images/ru_white_8.jpg';\r\nimport logo9 from './../../images/ru_white_9.jpg';\r\n\r\nimport classes from './../../index.css';\r\n\r\nimport SMDialogInfo from \"./info\";\r\nimport SMSimpleGame from \"./../games/simplegame\";\r\n\r\nconst cards = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n\r\nconst images = [logo1, logo2, logo3, logo4, logo5, logo6, logo7, logo8, logo9];\r\n\r\nconst titles = [\r\n    \"One-digit Comparision\",\r\n    \"One-digit Addition\",\r\n    \"One-digit Subtraction\",\r\n    \"One-digit Addition & Subtraction\",\r\n    \"Determination operation\",\r\n    \"Two-digit Comparision\",\r\n    \"Addition and Subtraction rounds\",\r\n    \"One- & Two- digit Addition & Subtraction\",\r\n    \"Two- digit Addition & Subtraction\"\r\n];\r\n\r\nconst headers = [\r\n    \"Tasks for Comparision of one-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Addition of one-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Subtraction of one-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Addition and Subtraction of one-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Determination of one from the two mathematical operation: Addition or Subtraction\",\r\n    \"Tasks for Comparision of two-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Addition and Subtraction of round numbers from 10 to 100 (numbers 10, 20, 30 ... 100)\",\r\n    \"Tasks for Addition and Subtraction of one- and two- digit numbers\",\r\n    \"Tasks for Addition and Subtraction of two- digit numbers\"\r\n];\r\n\r\nvar desciptions = [\r\n    \"Tasks for kids in age 3 - 6 years for Comparision of one-digit numbers (from 0 to 9), where you can to use only more (>), less (<) and equal (=) labels and have 10 seconds timeout to solve each task\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\r\n    \"Tasks for kids in age 3 - 6 years for Subtraction of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition and <b>Subtraction</b> of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\r\n    \"Tasks for kids in age 3 - 6 years for Understanding of one of two mathematical operation: addition or subtraction. You will know both arguments (numbers), the result of an operation and have 10 seconds timeout to solve each task\",\r\n    \"Tasks for kids in age 3 - 6 years for Comparision of two-digit numbers (from 0 to 9), where you can to use only more (>), less (<) and equal (=) labels and have 10 seconds timeout to solve each task\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition and Subtraction of round numbers from 10 to 100 (numbers 10, 20, 30 ... 100). You have 10 seconds timeout to solve each task\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition and Subtraction of one- and two- digit numbers. TBD.\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition and Subtraction of two-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\r\n];\r\n\r\n// https://source.unsplash.com/random\r\nexport default class SMBody extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {infoOpen: false,\r\n                      viewDialogTitleText: \"\",\r\n                      viewDialogDescriptionText: \"\",\r\n                      viewDialogImageUrl: \"\",\r\n                      gameOpen: false,\r\n                      gameInfo: false};\r\n        this.handleInfoOpen = this.handleInfoOpen.bind(this);\r\n        this.handleGameOpen = this.handleGameOpen.bind(this);\r\n    }\r\n    handleInfoOpen(card_id) {\r\n        this.setState({infoOpen: true });\r\n        this.setState({infoTitle: headers[card_id]});\r\n        this.setState({infoText: desciptions[card_id]});\r\n        this.setState({infoIURL: images[card_id]});\r\n    }\r\n    handleGameOpen(card_id) {\r\n        this.setState({gameOpen: true});\r\n    }\r\n\r\n    render() {\r\n        const section = {\r\n            width: '100%',\r\n            marginTop: '2%',\r\n            backgroundColor: 'white',\r\n            fontFamily: \"Grinched\",\r\n            fontVariant: \"small-caps\",\r\n            color: \"green\",\r\n        }\r\n\r\n        return (\r\n            <main>\r\n                <Typography variant=\"h1\" align=\"center\" style={section} paragraph>\r\n                    SuperMath \r\n                </Typography>\r\n\r\n                <Container className={classes.grid} maxWidth=\"md\">\r\n                    <Grid container spacing={4}>\r\n                        {cards.map(card => (\r\n                            <Grid item key={card} xs={12} sm={6} md={4}>\r\n                                <Card className={classes.card}>\r\n                                    <CardActionArea onClick={(e) => this.handleGameOpen(card)}>\r\n                                        <CardMedia component=\"img\" alt=\"Media Card task\" height=\"140\" image={images[card]}/>\r\n                                        <CardContent className={classes.content}>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">{titles[card]}</Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{headers[card]}</Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>    \r\n                                    <CardActions>\r\n                                        <Button size=\"small\" color=\"primary\" onClick={(e) => this.handleInfoOpen(card)}>View Task Details</Button>\r\n                                        <Button size=\"small\" color=\"primary\" onClick={(e) => this.handleGameOpen(card)}>Play</Button>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n\r\n                    <SMDialogInfo open={this.state.infoOpen}\r\n                                  title={this.state.infoTitle}\r\n                                  text={this.state.infoText}\r\n                                  imgUrl={this.state.infoIURL}\r\n                                  onClick={() => this.setState({infoOpen: false})}/>\r\n\r\n                    <SMSimpleGame open={this.state.gameOpen}\r\n                                  onClick={() => this.setState({gameOpen: false})}/>\r\n                </Container>\r\n          </main>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\supermath_ng\\\\supermath_ng_react\\\\src\\\\SMAlbum.js\";\nimport React from 'react';\nimport { Typography, Container, Button } from '@material-ui/core';\nimport { Grid, Card, CardActions, CardActionArea, CardContent, CardMedia } from '@material-ui/core';\nimport logo1 from './images/ru_white_1.jpg';\nimport logo2 from './images/ru_white_2.jpg';\nimport logo3 from './images/ru_white_3.jpg';\nimport logo4 from './images/ru_white_4.jpg';\nimport logo5 from './images/ru_white_5.jpg';\nimport logo6 from './images/ru_white_6.jpg';\nimport logo7 from './images/ru_white_7.jpg';\nimport logo8 from './images/ru_white_8.jpg';\nimport logo9 from './images/ru_white_9.jpg';\nimport classes from './index.css';\nimport SMDialogGameInfo from \"./SMDialogGameInfo\";\nimport SMDialogGamePlay from \"./SMDialogGamePlay\";\nconst cards = [0, 1, 2, 3, 4, 5, 6, 7, 8];\nconst images = [logo1, logo2, logo3, logo4, logo5, logo6, logo7, logo8, logo9];\nconst titles = [\"One-digit Comparision\", \"One-digit Addition\", \"One-digit Subtraction\", \"One-digit Addition & Subtraction\", \"Determination operation\", \"Two-digit Comparision\", \"Addition and Subtraction rounds\", \"One- & Two- digit Addition & Subtraction\", \"Two- digit Addition & Subtraction\"];\nconst headers = [\"Tasks for Comparision of one-digit numbers (from 0 to 9)\", \"Tasks for Addition of one-digit numbers (from 0 to 9)\", \"Tasks for Subtraction of one-digit numbers (from 0 to 9)\", \"Tasks for Addition and Subtraction of one-digit numbers (from 0 to 9)\", \"Tasks for Determination of one from the two mathematical operation: Addition or Subtraction\", \"Tasks for Comparision of two-digit numbers (from 0 to 9)\", \"Tasks for Addition and Subtraction of round numbers from 10 to 100 (numbers 10, 20, 30 ... 100)\", \"Tasks for Addition and Subtraction of one- and two- digit numbers\", \"Tasks for Addition and Subtraction of two- digit numbers\"];\nvar desciptions = [\"Tasks for kids in age 3 - 6 years for Comparision of one-digit numbers (from 0 to 9), where you can to use only more (>), less (<) and equal (=) labels and have 10 seconds timeout to solve each task\", \"Tasks for kids in age 3 - 6 years for Addition of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\", \"Tasks for kids in age 3 - 6 years for Subtraction of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\", \"Tasks for kids in age 3 - 6 years for Addition and <b>Subtraction</b> of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\", \"Tasks for kids in age 3 - 6 years for Understanding of one of two mathematical operation: addition or subtraction. You will know both arguments (numbers), the result of an operation and have 10 seconds timeout to solve each task\", \"Tasks for kids in age 3 - 6 years for Comparision of two-digit numbers (from 0 to 9), where you can to use only more (>), less (<) and equal (=) labels and have 10 seconds timeout to solve each task\", \"Tasks for kids in age 3 - 6 years for Addition and Subtraction of round numbers from 10 to 100 (numbers 10, 20, 30 ... 100). You have 10 seconds timeout to solve each task\", \"Tasks for kids in age 3 - 6 years for Addition and Subtraction of one- and two- digit numbers. TBD.\", \"Tasks for kids in age 3 - 6 years for Addition and Subtraction of two-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\"]; // https://source.unsplash.com/random\n\nexport default class SMAlbum extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      infoOpen: false,\n      viewDialogTitleText: \"\",\n      viewDialogDescriptionText: \"\",\n      viewDialogImageUrl: \"\",\n      gameOpen: false,\n      gameInfo: false\n    };\n    this.handleInfoOpen = this.handleInfoOpen.bind(this);\n    this.handleInfoClose = this.handleInfoClose.bind(this);\n    this.handleGameOpen = this.handleGameOpen.bind(this);\n    this.handleGameClose = this.handleGameClose.bind(this);\n  }\n\n  handleInfoOpen(card_id) {\n    this.setState({\n      infoOpen: true\n    });\n    this.setState({\n      infoTitl: headers[card_id]\n    });\n    this.setState({\n      infoText: desciptions[card_id]\n    });\n    this.setState({\n      infoIURL: images[card_id]\n    });\n  }\n\n  handleInfoClose() {\n    this.setState({\n      infoOpen: false\n    });\n  }\n\n  handleGameOpen(card_id) {\n    this.setState({\n      gameOpen: true\n    });\n  }\n\n  handleGameClose() {\n    this.setState({\n      gameOpen: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"sm\",\n      style: section,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h1\",\n      align: \"center\",\n      style: {\n        fontFamily: \"Grinched\",\n        fontVariant: \"small-caps\",\n        color: \"green\"\n      },\n      paragraph: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"SuperMath\")), React.createElement(Container, {\n      className: classes.grid,\n      maxWidth: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, cards.map(card => React.createElement(Grid, {\n      item: true,\n      key: card,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(CardActionArea, {\n      onClick: e => this.handleGameOpen(card),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      component: \"img\",\n      alt: \"Media Card task\",\n      height: \"140\",\n      image: images[card],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, titles[card]), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, headers[card]))), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: e => this.handleInfoOpen(card),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"View Task Details\"), React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: e => this.handleGameOpen(card),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Play\")))))), React.createElement(SMDialogGameInfo, {\n      open: this.state.infoOpen,\n      title: this.state.infoTitl,\n      text: this.state.infoText,\n      imgUrl: this.state.infoIURL,\n      onClick: () => this.handleInfoClose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(SMDialogGamePlay, {\n      open: this.state.gameOpen,\n      onClick: () => this.handleGameClose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["E:/supermath_ng/supermath_ng_react/src/SMAlbum.js"],"names":["React","Typography","Container","Button","Grid","Card","CardActions","CardActionArea","CardContent","CardMedia","logo1","logo2","logo3","logo4","logo5","logo6","logo7","logo8","logo9","classes","SMDialogGameInfo","SMDialogGamePlay","cards","images","titles","headers","desciptions","SMAlbum","Component","constructor","props","state","infoOpen","viewDialogTitleText","viewDialogDescriptionText","viewDialogImageUrl","gameOpen","gameInfo","handleInfoOpen","bind","handleInfoClose","handleGameOpen","handleGameClose","card_id","setState","infoTitl","infoText","infoIURL","render","section","fontFamily","fontVariant","color","grid","map","card","e","content"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Typography, Container, Button} from '@material-ui/core';\r\nimport {Grid, Card, CardActions, CardActionArea, CardContent, CardMedia} from '@material-ui/core';\r\n\r\nimport logo1 from './images/ru_white_1.jpg';\r\nimport logo2 from './images/ru_white_2.jpg';\r\nimport logo3 from './images/ru_white_3.jpg';\r\nimport logo4 from './images/ru_white_4.jpg';\r\nimport logo5 from './images/ru_white_5.jpg';\r\nimport logo6 from './images/ru_white_6.jpg';\r\nimport logo7 from './images/ru_white_7.jpg';\r\nimport logo8 from './images/ru_white_8.jpg';\r\nimport logo9 from './images/ru_white_9.jpg';\r\n\r\nimport classes from './index.css';\r\n\r\nimport SMDialogGameInfo from \"./SMDialogGameInfo\";\r\nimport SMDialogGamePlay from \"./SMDialogGamePlay\";\r\n\r\nconst cards = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n\r\nconst images = [logo1, logo2, logo3, logo4, logo5, logo6, logo7, logo8, logo9];\r\n\r\nconst titles = [\r\n    \"One-digit Comparision\",\r\n    \"One-digit Addition\",\r\n    \"One-digit Subtraction\",\r\n    \"One-digit Addition & Subtraction\",\r\n    \"Determination operation\",\r\n    \"Two-digit Comparision\",\r\n    \"Addition and Subtraction rounds\",\r\n    \"One- & Two- digit Addition & Subtraction\",\r\n    \"Two- digit Addition & Subtraction\"\r\n];\r\n\r\nconst headers = [\r\n    \"Tasks for Comparision of one-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Addition of one-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Subtraction of one-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Addition and Subtraction of one-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Determination of one from the two mathematical operation: Addition or Subtraction\",\r\n    \"Tasks for Comparision of two-digit numbers (from 0 to 9)\",\r\n    \"Tasks for Addition and Subtraction of round numbers from 10 to 100 (numbers 10, 20, 30 ... 100)\",\r\n    \"Tasks for Addition and Subtraction of one- and two- digit numbers\",\r\n    \"Tasks for Addition and Subtraction of two- digit numbers\"\r\n];\r\n\r\nvar desciptions = [\r\n    \"Tasks for kids in age 3 - 6 years for Comparision of one-digit numbers (from 0 to 9), where you can to use only more (>), less (<) and equal (=) labels and have 10 seconds timeout to solve each task\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\r\n    \"Tasks for kids in age 3 - 6 years for Subtraction of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition and <b>Subtraction</b> of one-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\r\n    \"Tasks for kids in age 3 - 6 years for Understanding of one of two mathematical operation: addition or subtraction. You will know both arguments (numbers), the result of an operation and have 10 seconds timeout to solve each task\",\r\n    \"Tasks for kids in age 3 - 6 years for Comparision of two-digit numbers (from 0 to 9), where you can to use only more (>), less (<) and equal (=) labels and have 10 seconds timeout to solve each task\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition and Subtraction of round numbers from 10 to 100 (numbers 10, 20, 30 ... 100). You have 10 seconds timeout to solve each task\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition and Subtraction of one- and two- digit numbers. TBD.\",\r\n    \"Tasks for kids in age 3 - 6 years for Addition and Subtraction of two-digit numbers. The result of addition can be an one or two digit number, the result of subtraction is zero or a one-digit number\",\r\n];\r\n\r\n// https://source.unsplash.com/random\r\nexport default class SMAlbum extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {infoOpen: false,\r\n                      viewDialogTitleText: \"\",\r\n                      viewDialogDescriptionText: \"\",\r\n                      viewDialogImageUrl: \"\",\r\n                      gameOpen: false,\r\n                      gameInfo: false};\r\n        this.handleInfoOpen = this.handleInfoOpen.bind(this);\r\n        this.handleInfoClose = this.handleInfoClose.bind(this);\r\n\r\n        this.handleGameOpen = this.handleGameOpen.bind(this);\r\n        this.handleGameClose = this.handleGameClose.bind(this);\r\n    }\r\n\r\n    handleInfoOpen(card_id) {\r\n        this.setState({infoOpen: true });\r\n        this.setState({infoTitl: headers[card_id]});\r\n        this.setState({infoText: desciptions[card_id]});\r\n        this.setState({infoIURL: images[card_id]});\r\n    }\r\n    handleInfoClose() {\r\n        this.setState({infoOpen: false});\r\n    }\r\n\r\n    handleGameOpen(card_id) {\r\n        this.setState({gameOpen: true});\r\n    }\r\n    handleGameClose() {\r\n        this.setState({gameOpen: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main>\r\n                <Container maxWidth=\"sm\" style={section}>\r\n                    <Typography variant=\"h1\" align=\"center\" style={{fontFamily: \"Grinched\", fontVariant: \"small-caps\", color: \"green\" }} paragraph>\r\n                        SuperMath \r\n                    </Typography>\r\n                </Container>\r\n\r\n                <Container className={classes.grid} maxWidth=\"md\">\r\n                    <Grid container spacing={4}>\r\n                        {cards.map(card => (\r\n                            <Grid item key={card} xs={12} sm={6} md={4}>\r\n                                <Card className={classes.card}>\r\n                                    <CardActionArea onClick={(e) => this.handleGameOpen(card)}>\r\n                                        <CardMedia component=\"img\" alt=\"Media Card task\" height=\"140\" image={images[card]}/>\r\n                                        <CardContent className={classes.content}>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">{titles[card]}</Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{headers[card]}</Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>    \r\n                                    <CardActions>\r\n                                        <Button size=\"small\" color=\"primary\" onClick={(e) => this.handleInfoOpen(card)}>View Task Details</Button>\r\n                                        <Button size=\"small\" color=\"primary\" onClick={(e) => this.handleGameOpen(card)}>Play</Button>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n\r\n                    <SMDialogGameInfo open={this.state.infoOpen} title={this.state.infoTitl} text={this.state.infoText} imgUrl={this.state.infoIURL} onClick={() => this.handleInfoClose()}/>\r\n                    <SMDialogGamePlay open={this.state.gameOpen} onClick={() => this.handleGameClose()}/>\r\n                </Container>\r\n          </main>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
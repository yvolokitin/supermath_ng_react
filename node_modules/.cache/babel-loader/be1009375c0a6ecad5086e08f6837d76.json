{"ast":null,"code":"var _jsxFileName = \"E:\\\\supermath_ng\\\\supermath_ng_react\\\\src\\\\components\\\\games\\\\simplegame.js\";\nimport React from 'react';\nimport { Dialog } from '@material-ui/core';\nimport { generate_rnd_task } from \"./../halpers/functions\";\nimport SMKeyBoard from \"./../keyboard/keyboard\";\nimport SMCircles from \"./circles\";\nimport './simplegame.css'; // text-decoration: line-through;\n\nexport default class SMSimpleGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onDigit = this.onDigit.bind(this);\n    this.onOperator = this.onOperator.bind(this);\n    /*\r\n        {'number_1': num_1, 'number_2': num_2, 'operation': task_operation, 'result': res};\r\n    */\n\n    this.task = generate_rnd_task('+', '0,9');\n    this.user_enter = '';\n    this.state = {\n      result: '?',\n      color: 'grey',\n      decoration: '',\n      success: false\n    };\n  }\n\n  set_wrong(digit) {\n    this.setState({\n      color: 'red',\n      result: 'WRONG, ' + digit\n    });\n  }\n\n  set_passed(digit) {\n    this.setState({\n      color: 'green',\n      result: digit\n    });\n  }\n\n  set_interim(digit) {\n    this.setState({\n      color: 'black',\n      result: digit\n    });\n  }\n\n  check_response(digit) {\n    var expected_result = this.task.result.toString();\n\n    if (expected_result.length === 1) {\n      if (digit === expected_result) {\n        this.setState({\n          result: digit\n        });\n      } else {\n        this.set_wrong(digit);\n      }\n    } else if (expected_result.length === 2) {\n      if (this.state.result === '?') {\n        if (expected_result.charAt(0).toString() === digit) {\n          this.setState({\n            result: digit\n          });\n        } else {\n          this.set_wrong(digit);\n        }\n      } else if (this.state.result.length === 1) {\n        var current = this.state.result + digit;\n\n        if (current === expected_result) {\n          this.setState({\n            result: current\n          });\n        } else {\n          this.set_wrong(digit);\n        }\n      }\n    } else if (this.task.result.toString().length === 3) {\n      console.log(\"tbd...not implemented yet.\");\n    }\n  }\n\n  onDigit({\n    target\n  }) {\n    console.log(\"onDigit \" + target.innerText);\n    this.check_response(target.innerText.toString());\n  }\n\n  onOperator({\n    target\n  }) {\n    const operator = target.innerText;\n    console.log(\"onOperator \" + operator); // tbd...\n  }\n  /*\r\n      <Dialog onClose={() => this.props.onClick()} fullScreen={true} open={this.props.open}>\r\n      https://about.phamvanlam.com/calculator/\r\n  */\n\n\n  render() {\n    return React.createElement(Dialog, {\n      onClose: () => this.props.onClick(),\n      fullScreen: true,\n      open: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header_div_left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"SUPERMATH\"), React.createElement(\"div\", {\n      className: \"header_div_right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"smile\")), React.createElement(\"div\", {\n      className: \"body_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"body_div_left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gameboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gameplay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mo_task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.task.number_1), React.createElement(\"div\", {\n      className: \"mo_task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.task.operation, \"   \", this.task.number_2), React.createElement(\"div\", {\n      className: \"black_line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \" \"), React.createElement(\"div\", {\n      className: \"mo_result\",\n      style: {\n        backgroundColor: this.state.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.result)), React.createElement(\"div\", {\n      className: \"gamehalper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"body_div_right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(SMKeyBoard, {\n      onDigit: this.onDigit,\n      onOperator: this.onOperator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"footer_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(SMCircles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["E:/supermath_ng/supermath_ng_react/src/components/games/simplegame.js"],"names":["React","Dialog","generate_rnd_task","SMKeyBoard","SMCircles","SMSimpleGame","Component","constructor","props","onDigit","bind","onOperator","task","user_enter","state","result","color","decoration","success","set_wrong","digit","setState","set_passed","set_interim","check_response","expected_result","toString","length","charAt","current","console","log","target","innerText","operator","render","onClick","number_1","operation","number_2","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Dialog} from '@material-ui/core';\r\n\r\nimport {generate_rnd_task} from \"./../halpers/functions\";\r\n\r\nimport SMKeyBoard from \"./../keyboard/keyboard\";\r\nimport SMCircles from \"./circles\";\r\n\r\nimport './simplegame.css';\r\n\r\n// text-decoration: line-through;\r\nexport default class SMSimpleGame extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onDigit = this.onDigit.bind(this);\r\n        this.onOperator = this.onOperator.bind(this);\r\n\r\n        /*\r\n            {'number_1': num_1, 'number_2': num_2, 'operation': task_operation, 'result': res};\r\n        */\r\n        this.task = generate_rnd_task('+', '0,9');\r\n        this.user_enter = '';\r\n        this.state = {result: '?',\r\n                      color: 'grey',\r\n                      decoration: '',\r\n                      success: false};\r\n    }\r\n\r\n    set_wrong(digit) {\r\n        this.setState({color: 'red',\r\n                       result: 'WRONG, ' + digit});\r\n    }\r\n\r\n    set_passed(digit) {\r\n        this.setState({color: 'green',\r\n                       result: digit});\r\n    }\r\n\r\n    set_interim(digit) {\r\n        this.setState({color: 'black',\r\n                       result: digit});\r\n    }\r\n\r\n    check_response(digit) {\r\n        var expected_result = this.task.result.toString();\r\n        if (expected_result.length === 1) {\r\n            if (digit === expected_result) {\r\n                this.setState({result: digit});\r\n            } else {\r\n                this.set_wrong(digit);\r\n            }\r\n\r\n        } else if (expected_result.length === 2) {\r\n            if (this.state.result === '?') {\r\n                if (expected_result.charAt(0).toString() === digit) {\r\n                    this.setState({result: digit});\r\n                } else {\r\n                    this.set_wrong(digit);\r\n                }\r\n            } else if (this.state.result.length === 1) {\r\n                var current = this.state.result + digit;\r\n                if (current === expected_result) {\r\n                    this.setState({result: current});\r\n                } else {\r\n                    this.set_wrong(digit);\r\n                }\r\n            }\r\n\r\n        } else if (this.task.result.toString().length === 3) {\r\n            console.log(\"tbd...not implemented yet.\");\r\n        }\r\n    }\r\n\r\n    onDigit({ target }) {\r\n        console.log(\"onDigit \" + target.innerText);\r\n        this.check_response((target.innerText).toString());\r\n    }\r\n\r\n    onOperator({ target }) {\r\n        const operator = target.innerText;\r\n        console.log(\"onOperator \" + operator);\r\n        // tbd...\r\n    }\r\n\r\n    /*\r\n        <Dialog onClose={() => this.props.onClick()} fullScreen={true} open={this.props.open}>\r\n        https://about.phamvanlam.com/calculator/\r\n    */\r\n    render() {\r\n        return (\r\n            <Dialog onClose={() => this.props.onClick()} fullScreen={true} open={true}>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"header_div\">\r\n                        <div className=\"header_div_left\">SUPERMATH</div>\r\n                        <div className=\"header_div_right\">smile</div>\r\n                    </div>\r\n\r\n                    <div className=\"body_div\">\r\n                        <div className=\"body_div_left\">\r\n                            <div className=\"gameboard\">\r\n                                <div className=\"gameplay\">\r\n                                    <div className=\"mo_task\">{this.task.number_1}</div>\r\n                                    <div className=\"mo_task\">{this.task.operation}   {this.task.number_2}</div>\r\n                                    <div className=\"black_line\"> </div>\r\n                                    <div className=\"mo_result\" style={{backgroundColor: this.state.color}}>{this.state.result}</div>\r\n                                </div>\r\n\r\n                                <div className=\"gamehalper\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"body_div_right\">\r\n                            <SMKeyBoard onDigit={this.onDigit} onOperator={this.onOperator}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"footer_div\">\r\n                        <SMCircles />\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Keyboard = require('./Keyboard');\n\nvar _Keyboard2 = _interopRequireDefault(_Keyboard);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar KeyboardedInput = function (_React$Component) {\n  _inherits(KeyboardedInput, _React$Component);\n\n  function KeyboardedInput(props) {\n    _classCallCheck(this, KeyboardedInput);\n\n    var _this = _possibleConstructorReturn(this, (KeyboardedInput.__proto__ || Object.getPrototypeOf(KeyboardedInput)).call(this, props));\n\n    _this.focus = _this.focus.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleFocusLost = _this.handleFocusLost.bind(_this);\n    _this.handleChange = _this.handleChange.bind(_this);\n    _this.hideKeyboard = _this.hideKeyboard.bind(_this);\n    _this.handleOnBlur = _this.handleOnBlur.bind(_this);\n    _this.handleOnFocus = _this.handleOnFocus.bind(_this);\n    _this.state = {\n      showKeyboard: false,\n      input: null\n    };\n    return _this;\n  }\n\n  _createClass(KeyboardedInput, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.input.addEventListener('input', this.handleChange);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.input.removeEventListener('input', this.handleChange);\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      this.input.focus();\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(event) {\n      this.props.onChange(event.target.value);\n    }\n  }, {\n    key: 'handleOnBlur',\n    value: function handleOnBlur(value) {\n      this.props.onBlur(value);\n    }\n  }, {\n    key: 'handleOnFocus',\n    value: function handleOnFocus(value) {\n      this.props.onFocus(value);\n    }\n  }, {\n    key: 'handleFocus',\n    value: function handleFocus() {\n      var _this2 = this;\n\n      var that = this; // Prevent blinking of the keyboard if opaque\n\n      setTimeout(function () {\n        if (that.input && typeof that.props.value !== 'undefined') {\n          that.input.focus();\n          that.input.select();\n          that.input.setSelectionRange(that.props.value.length, that.props.value.length); // Only trigger on first focus\n\n          if (_this2.state.showKeyboard === false && that.props.onFocus) {\n            that.props.onFocus(that.props.value);\n          }\n\n          that.setState(_extends({}, _this2.state, {\n            showKeyboard: true\n          }));\n        }\n      }, 0);\n    }\n  }, {\n    key: 'handleFocusLost',\n    value: function handleFocusLost() {\n      var that = this;\n      setTimeout(function () {\n        if (!document.activeElement.classList.contains('keyboard-button') && !document.activeElement.classList.contains('keyboard') && !document.activeElement.classList.contains('keyboard-row') && !document.activeElement.classList.contains('react-draggable-transparent-selection')) {\n          if (that.props.onBlur) {\n            that.props.onBlur(that.props.value);\n          }\n\n          that.setState(_extends({}, that.state, {\n            showKeyboard: false\n          }));\n        }\n      }, 0);\n    }\n  }, {\n    key: 'hideKeyboard',\n    value: function hideKeyboard() {\n      if (this.props.onBlur) {\n        this.props.onBlur(this.props.value);\n      }\n\n      this.setState(_extends({}, this.state, {\n        showKeyboard: false\n      }));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      return [_react2.default.createElement('input', {\n        key: '_input',\n        name: this.props.name,\n        className: this.props.inputClassName,\n        placeholder: this.props.placeholder,\n        required: this.props.required,\n        value: this.props.value,\n        type: this.props.type,\n        onFocus: this.handleFocus,\n        onBlur: this.handleFocusLost,\n        min: this.props.min,\n        max: this.props.max,\n        step: this.props.step,\n        pattern: this.props.pattern,\n        onChange: this.handleChange,\n        readOnly: this.props.readOnly === true,\n        ref: function ref(e) {\n          _this3.input = e;\n        }\n      }), _react2.default.createElement('div', {\n        key: '_container',\n        className: this.props.containerClassName\n      }, this.state.showKeyboard && this.props.enabled && this.props.readOnly !== true && _react2.default.createElement(_Keyboard2.default, {\n        hideKeyboard: this.hideKeyboard,\n        defaultKeyboard: this.props.defaultKeyboard,\n        secondaryKeyboard: this.props.secondaryKeyboard,\n        inputNode: this.input,\n        dataset: this.props.dataset,\n        opacity: this.props.opacity,\n        isDraggable: this.props.isDraggable,\n        isFirstLetterUppercase: this.props.isFirstLetterUppercase,\n        uppercaseAfterSpace: this.props.uppercaseAfterSpace,\n        keyboardClassName: this.props.keyboardClassName,\n        showNumericRow: this.props.showNumericRow,\n        showShift: this.props.showShift,\n        showSymbols: this.props.showSymbols,\n        showSpacebar: this.props.showSpacebar,\n        showSubmit: this.props.showSubmit\n      }))];\n    }\n  }]);\n\n  return KeyboardedInput;\n}(_react2.default.Component);\n\nKeyboardedInput.propTypes = {\n  name: _propTypes2.default.any,\n  containerClassName: _propTypes2.default.any,\n  inputClassName: _propTypes2.default.any,\n  keyboardClassName: _propTypes2.default.any,\n  placeholder: _propTypes2.default.any,\n  value: _propTypes2.default.any.isRequired,\n  type: _propTypes2.default.any,\n  min: _propTypes2.default.any,\n  max: _propTypes2.default.any,\n  step: _propTypes2.default.any,\n  pattern: _propTypes2.default.any,\n  readOnly: _propTypes2.default.any,\n  enabled: _propTypes2.default.any,\n  required: _propTypes2.default.bool,\n  defaultKeyboard: _propTypes2.default.any,\n  secondaryKeyboard: _propTypes2.default.any,\n  opacity: _propTypes2.default.any,\n  isDraggable: _propTypes2.default.any,\n  isFirstLetterUppercase: _propTypes2.default.any,\n  uppercaseAfterSpace: _propTypes2.default.any,\n  dataset: _propTypes2.default.any,\n  onChange: _propTypes2.default.func,\n  onBlur: _propTypes2.default.func,\n  onFocus: _propTypes2.default.func,\n  showNumericRow: _propTypes2.default.bool,\n  showShift: _propTypes2.default.bool,\n  showSymbols: _propTypes2.default.bool,\n  showSpacebar: _propTypes2.default.bool,\n  showSubmit: _propTypes2.default.bool\n};\nexports.default = KeyboardedInput;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}